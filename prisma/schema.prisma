// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ------------ USER --------------
model User {
  id       String @id @default(uuid())
  username String
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Projects    Project[]
  Users       ProjectUsers[]
  Comment     Comment[]
  Attachments Attachment[]
}

// ------------ PROJECT --------------
model Project {
  id    String @id @default(uuid())
  title String
  key   String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  Users  ProjectUsers[]
  Issues Issue[]
}

// ------------ PROJECT ADMINS --------------
model ProjectUsers {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  role String @default("user") // user, admin

  @@unique([userId, projectId])
}

// ------------ ISSUE --------------
model Issue {
  id          String   @id @default(uuid())
  title       String
  description String?
  key         String
  status      String   @default("todo")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project     Project      @relation(fields: [projectId], references: [id])
  projectId   String
  Comments    Comment[]
  Attachments Attachment[]
}

// ------------ ISSUE COMMENTS --------------
model Comment {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  issue   Issue  @relation(fields: [issueId], references: [id])
  issueId String
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

// -------------- ATTACHED FILES TO ISSUE --------------
model Attachment {
  id        String   @id @default(uuid())
  filePath  String
  fileName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  issue   Issue  @relation(fields: [issueId], references: [id])
  issueId String

  user   User   @relation(fields: [userId], references: [id])
  userId String
}
